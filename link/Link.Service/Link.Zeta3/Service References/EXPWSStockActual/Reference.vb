'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.17929
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace EXPWSStockActual
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="LIBRA", ConfigurationName:="EXPWSStockActual.ExpWSStockActualSoapPort")>  _
    Public Interface ExpWSStockActualSoapPort
        
        <System.ServiceModel.OperationContractAttribute(Action:="LIBRAaction/AEXPWSSTOCKACTUAL.Execute", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function Execute(ByVal request As EXPWSStockActual.ExecuteRequest) As EXPWSStockActual.ExecuteResponse
        
        'CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores de devolución.
        <System.ServiceModel.OperationContractAttribute(Action:="LIBRAaction/AEXPWSSTOCKACTUAL.Execute", ReplyAction:="*")>  _
        Function ExecuteAsync(ByVal request As EXPWSStockActual.ExecuteRequest) As System.Threading.Tasks.Task(Of EXPWSStockActual.ExecuteResponse)
    End Interface
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="StockActualSdt.StockActualItem", [Namespace]:="LIBRA")>  _
    Partial Public Class StockActualSdtStockActualItem
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private codigoDepositoField As Short
        
        Private codigoArticuloField As String
        
        Private codigoLoteField As String
        
        Private vencimientoLoteField As String
        
        Private stockField As Double
        
        '''<comentarios/>
        Public Property CodigoDeposito() As Short
            Get
                Return Me.codigoDepositoField
            End Get
            Set
                Me.codigoDepositoField = value
                Me.RaisePropertyChanged("CodigoDeposito")
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CodigoArticulo() As String
            Get
                Return Me.codigoArticuloField
            End Get
            Set
                Me.codigoArticuloField = value
                Me.RaisePropertyChanged("CodigoArticulo")
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CodigoLote() As String
            Get
                Return Me.codigoLoteField
            End Get
            Set
                Me.codigoLoteField = value
                Me.RaisePropertyChanged("CodigoLote")
            End Set
        End Property
        
        '''<comentarios/>
        Public Property VencimientoLote() As String
            Get
                Return Me.vencimientoLoteField
            End Get
            Set
                Me.vencimientoLoteField = value
                Me.RaisePropertyChanged("VencimientoLote")
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Stock() As Double
            Get
                Return Me.stockField
            End Get
            Set
                Me.stockField = value
                Me.RaisePropertyChanged("Stock")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExpWSStockActual.Execute", WrapperNamespace:="LIBRA", IsWrapped:=true)>  _
    Partial Public Class ExecuteRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=0)>  _
        Public Empid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=1)>  _
        Public Emppassword As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=2)>  _
        Public Codigoarticulo As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=3)>  _
        Public Codigodeposito As Short
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Empid As String, ByVal Emppassword As String, ByVal Codigoarticulo As String, ByVal Codigodeposito As Short)
            MyBase.New
            Me.Empid = Empid
            Me.Emppassword = Emppassword
            Me.Codigoarticulo = Codigoarticulo
            Me.Codigodeposito = Codigodeposito
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExpWSStockActual.ExecuteResponse", WrapperNamespace:="LIBRA", IsWrapped:=true)>  _
    Partial Public Class ExecuteResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=0)>  _
        Public Ok As SByte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=1)>  _
        Public [Error] As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="LIBRA", Order:=2),  _
         System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Stockactualsdt() As EXPWSStockActual.StockActualSdtStockActualItem
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal Ok As SByte, ByVal [Error] As String, ByVal Stockactualsdt() As EXPWSStockActual.StockActualSdtStockActualItem)
            MyBase.New
            Me.Ok = Ok
            Me.[Error] = [Error]
            Me.Stockactualsdt = Stockactualsdt
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ExpWSStockActualSoapPortChannel
        Inherits EXPWSStockActual.ExpWSStockActualSoapPort, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ExpWSStockActualSoapPortClient
        Inherits System.ServiceModel.ClientBase(Of EXPWSStockActual.ExpWSStockActualSoapPort)
        Implements EXPWSStockActual.ExpWSStockActualSoapPort
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function EXPWSStockActual_ExpWSStockActualSoapPort_Execute(ByVal request As EXPWSStockActual.ExecuteRequest) As EXPWSStockActual.ExecuteResponse Implements EXPWSStockActual.ExpWSStockActualSoapPort.Execute
            Return MyBase.Channel.Execute(request)
        End Function
        
        Public Function Execute(ByVal Empid As String, ByVal Emppassword As String, ByVal Codigoarticulo As String, ByVal Codigodeposito As Short, <System.Runtime.InteropServices.OutAttribute()> ByRef [Error] As String, <System.Runtime.InteropServices.OutAttribute()> ByRef Stockactualsdt() As EXPWSStockActual.StockActualSdtStockActualItem) As SByte
            Dim inValue As EXPWSStockActual.ExecuteRequest = New EXPWSStockActual.ExecuteRequest()
            inValue.Empid = Empid
            inValue.Emppassword = Emppassword
            inValue.Codigoarticulo = Codigoarticulo
            inValue.Codigodeposito = Codigodeposito
            Dim retVal As EXPWSStockActual.ExecuteResponse = CType(Me,EXPWSStockActual.ExpWSStockActualSoapPort).Execute(inValue)
            [Error] = retVal.[Error]
            Stockactualsdt = retVal.Stockactualsdt
            Return retVal.Ok
        End Function
        
        Public Function ExecuteAsync(ByVal request As EXPWSStockActual.ExecuteRequest) As System.Threading.Tasks.Task(Of EXPWSStockActual.ExecuteResponse) Implements EXPWSStockActual.ExpWSStockActualSoapPort.ExecuteAsync
            Return MyBase.Channel.ExecuteAsync(request)
        End Function
    End Class
End Namespace
